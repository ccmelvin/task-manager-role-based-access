name: 🎭 Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths: [ 'frontend/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'frontend/**' ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: 📦 Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: 🧪 Run unit tests
      working-directory: ./frontend
      run: npm test -- --coverage --watchAll=false

    - name: 📊 Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend-unit
        name: frontend-unit-tests

  e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: 📦 Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: 🎭 Install Playwright browsers
      working-directory: ./frontend
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: 🏗️ Build application
      working-directory: ./frontend
      run: npm run build

    - name: 🧪 Run E2E tests
      working-directory: ./frontend
      run: npx playwright test --project=${{ matrix.browser }}

    - name: 📋 Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: frontend/playwright-report/
        retention-days: 30

    - name: 📸 Upload screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: playwright-screenshots-${{ matrix.browser }}
        path: frontend/test-results/
        retention-days: 30

  accessibility-tests:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: 📦 Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: 🎭 Install Playwright
      working-directory: ./frontend
      run: npx playwright install --with-deps chromium

    - name: ♿ Run accessibility tests
      working-directory: ./frontend
      run: npx playwright test tests/e2e/accessibility-performance.spec.ts --project=chromium

    - name: 📋 Upload accessibility report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: accessibility-report
        path: frontend/playwright-report/
        retention-days: 30

  visual-regression:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: 📦 Install dependencies
      working-directory: ./frontend
      run: npm ci

    - name: 🎭 Install Playwright
      working-directory: ./frontend
      run: npx playwright install --with-deps chromium

    - name: 📸 Run visual regression tests
      working-directory: ./frontend
      run: npx playwright test tests/e2e/ui-components.spec.ts --project=chromium

    - name: 📋 Upload visual diff report
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: visual-regression-report
        path: frontend/test-results/
        retention-days: 30
